/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createComponentStatusFromDiscriminatorValue, type ComponentStatus } from '../../../../models/api/core/v1/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /api/v1/componentstatuses/{name}
 */
export interface WithNameItemRequestBuilder extends BaseRequestBuilder<WithNameItemRequestBuilder> {
    /**
     * read the specified ComponentStatus
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ComponentStatus>}
     */
     get(requestConfiguration?: RequestConfiguration<WithNameItemRequestBuilderGetQueryParameters> | undefined) : Promise<ComponentStatus | undefined>;
    /**
     * read the specified ComponentStatus
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<WithNameItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * read the specified ComponentStatus
 */
export interface WithNameItemRequestBuilderGetQueryParameters {
    /**
     * If 'true', then the output is pretty printed. Defaults to 'false' unless the user-agent indicates a browser or command-line HTTP tool (curl and wget).
     */
    pretty?: string;
}
/**
 * Uri template for the request builder.
 */
export const WithNameItemRequestBuilderUriTemplate = "{+baseurl}/api/v1/componentstatuses/{name}{?pretty*}";
/**
 * Metadata for all the requests in the request builder.
 */
export const WithNameItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: WithNameItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createComponentStatusFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
