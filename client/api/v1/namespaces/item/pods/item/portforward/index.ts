/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /api/v1/namespaces/{namespace-id}/pods/{name}/portforward
 */
export interface PortforwardRequestBuilder extends BaseRequestBuilder<PortforwardRequestBuilder> {
    /**
     * connect GET requests to portforward of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     */
     get(requestConfiguration?: RequestConfiguration<PortforwardRequestBuilderGetQueryParameters> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * connect POST requests to portforward of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     */
     post(requestConfiguration?: RequestConfiguration<PortforwardRequestBuilderPostQueryParameters> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * connect GET requests to portforward of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<PortforwardRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * connect POST requests to portforward of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(requestConfiguration?: RequestConfiguration<PortforwardRequestBuilderPostQueryParameters> | undefined) : RequestInformation;
}
/**
 * connect GET requests to portforward of Pod
 */
export interface PortforwardRequestBuilderGetQueryParameters {
    /**
     * List of ports to forward Required when using WebSockets
     */
    ports?: number;
}
/**
 * connect POST requests to portforward of Pod
 */
export interface PortforwardRequestBuilderPostQueryParameters {
    /**
     * List of ports to forward Required when using WebSockets
     */
    ports?: number;
}
/**
 * Uri template for the request builder.
 */
export const PortforwardRequestBuilderUriTemplate = "{+baseurl}/api/v1/namespaces/{namespace%2Did}/pods/{name}/portforward{?ports*}";
/**
 * Metadata for all the requests in the request builder.
 */
export const PortforwardRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: PortforwardRequestBuilderUriTemplate,
        responseBodyContentType: "*/*",
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
    post: {
        uriTemplate: PortforwardRequestBuilderUriTemplate,
        responseBodyContentType: "*/*",
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
};
/* tslint:enable */
/* eslint-enable */
