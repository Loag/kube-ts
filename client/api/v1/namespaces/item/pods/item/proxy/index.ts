/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type WithPathItemRequestBuilder, WithPathItemRequestBuilderRequestsMetadata } from './item/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /api/v1/namespaces/{namespace-id}/pods/{name}/proxy
 */
export interface ProxyRequestBuilder extends BaseRequestBuilder<ProxyRequestBuilder> {
    /**
     * Gets an item from the ApiSdk.api.v1.namespaces.item.pods.item.proxy.item collection
     * @param path path to the resource
     * @returns {WithPathItemRequestBuilder}
     */
     byPath(path: string) : WithPathItemRequestBuilder;
    /**
     * connect DELETE requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     */
     delete(requestConfiguration?: RequestConfiguration<ProxyRequestBuilderDeleteQueryParameters> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * connect GET requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     */
     get(requestConfiguration?: RequestConfiguration<ProxyRequestBuilderGetQueryParameters> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * connect HEAD requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     */
     head(requestConfiguration?: RequestConfiguration<ProxyRequestBuilderHeadQueryParameters> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * connect OPTIONS requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     */
     options(requestConfiguration?: RequestConfiguration<ProxyRequestBuilderOptionsQueryParameters> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * connect PATCH requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     */
     patch(requestConfiguration?: RequestConfiguration<ProxyRequestBuilderPatchQueryParameters> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * connect POST requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     */
     post(requestConfiguration?: RequestConfiguration<ProxyRequestBuilderPostQueryParameters> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * connect PUT requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     */
     put(requestConfiguration?: RequestConfiguration<ProxyRequestBuilderPutQueryParameters> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * connect DELETE requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<ProxyRequestBuilderDeleteQueryParameters> | undefined) : RequestInformation;
    /**
     * connect GET requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ProxyRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * connect HEAD requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toHeadRequestInformation(requestConfiguration?: RequestConfiguration<ProxyRequestBuilderHeadQueryParameters> | undefined) : RequestInformation;
    /**
     * connect OPTIONS requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toOptionsRequestInformation(requestConfiguration?: RequestConfiguration<ProxyRequestBuilderOptionsQueryParameters> | undefined) : RequestInformation;
    /**
     * connect PATCH requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(requestConfiguration?: RequestConfiguration<ProxyRequestBuilderPatchQueryParameters> | undefined) : RequestInformation;
    /**
     * connect POST requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(requestConfiguration?: RequestConfiguration<ProxyRequestBuilderPostQueryParameters> | undefined) : RequestInformation;
    /**
     * connect PUT requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPutRequestInformation(requestConfiguration?: RequestConfiguration<ProxyRequestBuilderPutQueryParameters> | undefined) : RequestInformation;
}
/**
 * connect DELETE requests to proxy of Pod
 */
export interface ProxyRequestBuilderDeleteQueryParameters {
    /**
     * Path is the URL path to use for the current proxy request to pod.
     */
    path?: string;
}
/**
 * connect GET requests to proxy of Pod
 */
export interface ProxyRequestBuilderGetQueryParameters {
    /**
     * Path is the URL path to use for the current proxy request to pod.
     */
    path?: string;
}
/**
 * connect HEAD requests to proxy of Pod
 */
export interface ProxyRequestBuilderHeadQueryParameters {
    /**
     * Path is the URL path to use for the current proxy request to pod.
     */
    path?: string;
}
/**
 * connect OPTIONS requests to proxy of Pod
 */
export interface ProxyRequestBuilderOptionsQueryParameters {
    /**
     * Path is the URL path to use for the current proxy request to pod.
     */
    path?: string;
}
/**
 * connect PATCH requests to proxy of Pod
 */
export interface ProxyRequestBuilderPatchQueryParameters {
    /**
     * Path is the URL path to use for the current proxy request to pod.
     */
    path?: string;
}
/**
 * connect POST requests to proxy of Pod
 */
export interface ProxyRequestBuilderPostQueryParameters {
    /**
     * Path is the URL path to use for the current proxy request to pod.
     */
    path?: string;
}
/**
 * connect PUT requests to proxy of Pod
 */
export interface ProxyRequestBuilderPutQueryParameters {
    /**
     * Path is the URL path to use for the current proxy request to pod.
     */
    path?: string;
}
/**
 * Uri template for the request builder.
 */
export const ProxyRequestBuilderUriTemplate = "{+baseurl}/api/v1/namespaces/{namespace%2Did}/pods/{name}/proxy{?path*}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ProxyRequestBuilderNavigationMetadata: Record<Exclude<keyof ProxyRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byPath: {
        requestsMetadata: WithPathItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["path"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ProxyRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: ProxyRequestBuilderUriTemplate,
        responseBodyContentType: "*/*",
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
    get: {
        uriTemplate: ProxyRequestBuilderUriTemplate,
        responseBodyContentType: "*/*",
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
    head: {
        uriTemplate: ProxyRequestBuilderUriTemplate,
        responseBodyContentType: "*/*",
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
    options: {
        uriTemplate: ProxyRequestBuilderUriTemplate,
        responseBodyContentType: "*/*",
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
    patch: {
        uriTemplate: ProxyRequestBuilderUriTemplate,
        responseBodyContentType: "*/*",
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
    post: {
        uriTemplate: ProxyRequestBuilderUriTemplate,
        responseBodyContentType: "*/*",
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
    put: {
        uriTemplate: ProxyRequestBuilderUriTemplate,
        responseBodyContentType: "*/*",
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
};
/* tslint:enable */
/* eslint-enable */
