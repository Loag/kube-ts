/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /api/v1/namespaces/{namespace-id}/pods/{name}/proxy/{path}
 */
export interface WithPathItemRequestBuilder extends BaseRequestBuilder<WithPathItemRequestBuilder> {
    /**
     * connect DELETE requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     */
     delete(requestConfiguration?: RequestConfiguration<WithPathItemRequestBuilderDeleteQueryParameters> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * connect GET requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     */
     get(requestConfiguration?: RequestConfiguration<WithPathItemRequestBuilderGetQueryParameters> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * connect HEAD requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     */
     head(requestConfiguration?: RequestConfiguration<WithPathItemRequestBuilderHeadQueryParameters> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * connect OPTIONS requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     */
     options(requestConfiguration?: RequestConfiguration<WithPathItemRequestBuilderOptionsQueryParameters> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * connect PATCH requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     */
     patch(requestConfiguration?: RequestConfiguration<WithPathItemRequestBuilderPatchQueryParameters> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * connect POST requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     */
     post(requestConfiguration?: RequestConfiguration<WithPathItemRequestBuilderPostQueryParameters> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * connect PUT requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     */
     put(requestConfiguration?: RequestConfiguration<WithPathItemRequestBuilderPutQueryParameters> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * connect DELETE requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<WithPathItemRequestBuilderDeleteQueryParameters> | undefined) : RequestInformation;
    /**
     * connect GET requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<WithPathItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * connect HEAD requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toHeadRequestInformation(requestConfiguration?: RequestConfiguration<WithPathItemRequestBuilderHeadQueryParameters> | undefined) : RequestInformation;
    /**
     * connect OPTIONS requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toOptionsRequestInformation(requestConfiguration?: RequestConfiguration<WithPathItemRequestBuilderOptionsQueryParameters> | undefined) : RequestInformation;
    /**
     * connect PATCH requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPatchRequestInformation(requestConfiguration?: RequestConfiguration<WithPathItemRequestBuilderPatchQueryParameters> | undefined) : RequestInformation;
    /**
     * connect POST requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(requestConfiguration?: RequestConfiguration<WithPathItemRequestBuilderPostQueryParameters> | undefined) : RequestInformation;
    /**
     * connect PUT requests to proxy of Pod
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPutRequestInformation(requestConfiguration?: RequestConfiguration<WithPathItemRequestBuilderPutQueryParameters> | undefined) : RequestInformation;
}
/**
 * connect DELETE requests to proxy of Pod
 */
export interface WithPathItemRequestBuilderDeleteQueryParameters {
    /**
     * Path is the URL path to use for the current proxy request to pod.
     */
    path?: string;
}
/**
 * connect GET requests to proxy of Pod
 */
export interface WithPathItemRequestBuilderGetQueryParameters {
    /**
     * Path is the URL path to use for the current proxy request to pod.
     */
    path?: string;
}
/**
 * connect HEAD requests to proxy of Pod
 */
export interface WithPathItemRequestBuilderHeadQueryParameters {
    /**
     * Path is the URL path to use for the current proxy request to pod.
     */
    path?: string;
}
/**
 * connect OPTIONS requests to proxy of Pod
 */
export interface WithPathItemRequestBuilderOptionsQueryParameters {
    /**
     * Path is the URL path to use for the current proxy request to pod.
     */
    path?: string;
}
/**
 * connect PATCH requests to proxy of Pod
 */
export interface WithPathItemRequestBuilderPatchQueryParameters {
    /**
     * Path is the URL path to use for the current proxy request to pod.
     */
    path?: string;
}
/**
 * connect POST requests to proxy of Pod
 */
export interface WithPathItemRequestBuilderPostQueryParameters {
    /**
     * Path is the URL path to use for the current proxy request to pod.
     */
    path?: string;
}
/**
 * connect PUT requests to proxy of Pod
 */
export interface WithPathItemRequestBuilderPutQueryParameters {
    /**
     * Path is the URL path to use for the current proxy request to pod.
     */
    path?: string;
}
/**
 * Uri template for the request builder.
 */
export const WithPathItemRequestBuilderUriTemplate = "{+baseurl}/api/v1/namespaces/{namespace%2Did}/pods/{name}/proxy/{path}{?path*}";
/**
 * Metadata for all the requests in the request builder.
 */
export const WithPathItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: WithPathItemRequestBuilderUriTemplate,
        responseBodyContentType: "*/*",
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
    get: {
        uriTemplate: WithPathItemRequestBuilderUriTemplate,
        responseBodyContentType: "*/*",
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
    head: {
        uriTemplate: WithPathItemRequestBuilderUriTemplate,
        responseBodyContentType: "*/*",
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
    options: {
        uriTemplate: WithPathItemRequestBuilderUriTemplate,
        responseBodyContentType: "*/*",
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
    patch: {
        uriTemplate: WithPathItemRequestBuilderUriTemplate,
        responseBodyContentType: "*/*",
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
    post: {
        uriTemplate: WithPathItemRequestBuilderUriTemplate,
        responseBodyContentType: "*/*",
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
    put: {
        uriTemplate: WithPathItemRequestBuilderUriTemplate,
        responseBodyContentType: "*/*",
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
};
/* tslint:enable */
/* eslint-enable */
