/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createAPIResourceListFromDiscriminatorValue, type APIResourceList } from '../../../models/apimachinery/pkg/apis/meta/v1/index.js';
// @ts-ignore
import { CsidriversRequestBuilderNavigationMetadata, CsidriversRequestBuilderRequestsMetadata, type CsidriversRequestBuilder } from './csidrivers/index.js';
// @ts-ignore
import { CsinodesRequestBuilderNavigationMetadata, CsinodesRequestBuilderRequestsMetadata, type CsinodesRequestBuilder } from './csinodes/index.js';
// @ts-ignore
import { CsistoragecapacitiesRequestBuilderRequestsMetadata, type CsistoragecapacitiesRequestBuilder } from './csistoragecapacities/index.js';
// @ts-ignore
import { NamespacesRequestBuilderNavigationMetadata, type NamespacesRequestBuilder } from './namespaces/index.js';
// @ts-ignore
import { StorageclassesRequestBuilderNavigationMetadata, StorageclassesRequestBuilderRequestsMetadata, type StorageclassesRequestBuilder } from './storageclasses/index.js';
// @ts-ignore
import { type VolumeattachmentsRequestBuilder, VolumeattachmentsRequestBuilderNavigationMetadata, VolumeattachmentsRequestBuilderRequestsMetadata } from './volumeattachments/index.js';
// @ts-ignore
import { type WatchRequestBuilder, WatchRequestBuilderNavigationMetadata } from './watch/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /apis/storage.k8s.io/v1/
 */
export interface V1RequestBuilder extends BaseRequestBuilder<V1RequestBuilder> {
    /**
     * The csidrivers property
     */
    get csidrivers(): CsidriversRequestBuilder;
    /**
     * The csinodes property
     */
    get csinodes(): CsinodesRequestBuilder;
    /**
     * The csistoragecapacities property
     */
    get csistoragecapacities(): CsistoragecapacitiesRequestBuilder;
    /**
     * The namespaces property
     */
    get namespaces(): NamespacesRequestBuilder;
    /**
     * The storageclasses property
     */
    get storageclasses(): StorageclassesRequestBuilder;
    /**
     * The volumeattachments property
     */
    get volumeattachments(): VolumeattachmentsRequestBuilder;
    /**
     * The watch property
     */
    get watch(): WatchRequestBuilder;
    /**
     * get available resources
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<APIResourceList>}
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<APIResourceList | undefined>;
    /**
     * get available resources
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const V1RequestBuilderUriTemplate = "{+baseurl}/apis/storage.k8s.io/v1/";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const V1RequestBuilderNavigationMetadata: Record<Exclude<keyof V1RequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    csidrivers: {
        requestsMetadata: CsidriversRequestBuilderRequestsMetadata,
        navigationMetadata: CsidriversRequestBuilderNavigationMetadata,
    },
    csinodes: {
        requestsMetadata: CsinodesRequestBuilderRequestsMetadata,
        navigationMetadata: CsinodesRequestBuilderNavigationMetadata,
    },
    csistoragecapacities: {
        requestsMetadata: CsistoragecapacitiesRequestBuilderRequestsMetadata,
    },
    namespaces: {
        navigationMetadata: NamespacesRequestBuilderNavigationMetadata,
    },
    storageclasses: {
        requestsMetadata: StorageclassesRequestBuilderRequestsMetadata,
        navigationMetadata: StorageclassesRequestBuilderNavigationMetadata,
    },
    volumeattachments: {
        requestsMetadata: VolumeattachmentsRequestBuilderRequestsMetadata,
        navigationMetadata: VolumeattachmentsRequestBuilderNavigationMetadata,
    },
    watch: {
        navigationMetadata: WatchRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const V1RequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: V1RequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createAPIResourceListFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
